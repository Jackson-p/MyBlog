{
  "labels": [
    {
      "name": "CSS"
    },
    {
      "name": "前端库与框架"
    },
    {
      "name": "js基础"
    },
    {
      "name": "工程"
    },
    {
      "name": "后端"
    }
  ],
  "issues": {
    "total_count": 41,
    "incomplete_results": false,
    "items": [
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/42",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/42/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/42/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/42/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/42",
        "id": 569467443,
        "node_id": "MDU6SXNzdWU1Njk0Njc0NDM=",
        "number": 42,
        "title": "用React实现一个手势化组件",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247499785,
            "node_id": "MDU6TGFiZWwxMjQ3NDk5Nzg1",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/JS%E4%B8%93%E9%A2%98",
            "name": "JS专题",
            "color": "e53d5c",
            "default": false,
            "description": "JS专题"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-23T09:32:22Z",
        "updated_at": "2020-02-23T09:32:22Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "效果无非就是把一个元素比如图片放在一个控制器里，用户可以通过手势任意修改这个组件的位置、大小、角度等。\r\n\r\n自己实现的代码如下:(细节实现日后再写)\r\n```js\r\nimport React, { Component } from 'react';\r\nimport './style.less'\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\ninterface State {\r\n    x: number;\r\n    y: number;\r\n    s: number;\r\n    r: number;\r\n}\r\n\r\ntype ContollerStyle = {\r\n    transform: string;\r\n    width: string;\r\n    height: string;\r\n}\r\n\r\nexport default class ImgController extends Component<Props, State> {\r\n    translate: Array<number> = [0, 0]\r\n    material_middle: Array<number> = [50, 50]\r\n    touch_start_pos: Array<number> = [0, 0]\r\n    scale: number = 1\r\n    rotate: number = 0\r\n    readonly material_size = {\r\n        width: 100,\r\n        height: 100\r\n    }\r\n\r\n    state: State = {\r\n        x: 0,\r\n        y: 0,\r\n        s: 1,\r\n        r: 0\r\n    }\r\n    \r\n    handleTouchStart = (event) => {\r\n        const touches = event.touches[0];\r\n        this.touch_start_pos = [touches.pageX, touches.pageY];\r\n    }\r\n    handleTouchMove = (event) => {\r\n        const touches = event.touches[0];\r\n        this.material_middle = [\r\n            this.material_middle[0] + touches.pageX - this.touch_start_pos[0],\r\n            this.material_middle[1] + touches.pageY - this.touch_start_pos[1]\r\n        ];\r\n        this.translate = [\r\n            this.translate[0] + touches.pageX - this.touch_start_pos[0],\r\n            this.translate[1] + touches.pageY - this.touch_start_pos[1]\r\n        ];\r\n        this.touch_start_pos = [touches.pageX, touches.pageY];\r\n        this.setState({\r\n            x: this.translate[0],\r\n            y: this.translate[1]\r\n        });\r\n    }\r\n    handleTouchRotate = (event) => {\r\n        const touches = event.touches[0];\r\n        this.scale = Math.sqrt(Math.pow(touches.pageX - this.material_middle[0], 2) + Math.pow(touches.pageY - this.material_middle[1], 2)) / Math.sqrt(Math.pow(this.material_size.width / 2, 2) + Math.pow(this.material_size.height / 2, 2));\r\n        this.rotate = Math.atan2(touches.pageY - this.material_middle[1], touches.pageX - this.material_middle[0]) * 180 / Math.PI - 45;\r\n        this.setState({\r\n            s: this.scale,\r\n            r: this.rotate\r\n        })\r\n        event.stopPropagation();\r\n    }\r\n    render() {\r\n        let controller_style: ContollerStyle = {\r\n            transform: `translate(${this.state.x}px, ${this.state.y}px) scale(${this.state.s}) rotate(${this.state.r}deg)`,\r\n            width: `${this.material_size.width}px`,\r\n            height: `${this.material_size.height}px`\r\n        }\r\n        return (\r\n            <div className=\"image-controller\" \r\n                 onTouchStart={this.handleTouchStart}\r\n                 onTouchMove={this.handleTouchMove}\r\n                 style={controller_style}\r\n                >\r\n                <div className=\"load-img\"></div>\r\n                <div className=\"operator-wrapper\">\r\n                    <span className=\"operator\" onTouchMove={this.handleTouchRotate} ></span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n```",
        "score": 1.0
      },
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/41",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/41/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/41/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/41/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/41",
        "id": 520619857,
        "node_id": "MDU6SXNzdWU1MjA2MTk4NTc=",
        "number": 41,
        "title": "日常之网络与shell",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247585329,
            "node_id": "MDU6TGFiZWwxMjQ3NTg1MzI5",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6",
            "name": "计算机科学",
            "color": "fef2c0",
            "default": false,
            "description": "含数据结构与算法，计算机网络，操作系统，编译原理等"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-10T15:58:33Z",
        "updated_at": "2019-11-10T15:58:33Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "#### Linux常见命令\r\n\r\n* proxychains 通过代理上传（查不到相关资料）\r\n* scp 一般用于linux服务器之间互相传文件\r\n* ps -ef 查看所有程序和进程信息\r\n* cat /proc/2913/status 查看物理内存占用\r\n\r\n#### 请求转发的手段\r\n\r\n本地调试可以用[charles转发功能](https://blog.csdn.net/qq_29674635/article/details/78837210)\r\n其他情况可以走node中间层转发或者是nginx转发",
        "score": 1.0
      },
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/40",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/40/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/40/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/40/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/40",
        "id": 520618034,
        "node_id": "MDU6SXNzdWU1MjA2MTgwMzQ=",
        "number": 40,
        "title": "日常之css技巧",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247499777,
            "node_id": "MDU6TGFiZWwxMjQ3NDk5Nzc3",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/CSS",
            "name": "CSS",
            "color": "2f98d9",
            "default": false,
            "description": "CSS"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-10T15:43:06Z",
        "updated_at": "2019-11-10T16:35:02Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "#### css 实现字体颜色渐变\r\n\r\nhttps://blog.csdn.net/FE_dev/article/details/78450844\r\n```css\r\nbackground: linear-gradient(to right, #FEE779 100%, #F9C93C 100%);\r\nbackground-clip: text;\r\ncolor: transparent;\r\n```\r\n\r\n#### css 遮挡modal效果\r\n\r\n```css\r\n    .cover{\r\n        background: rgba(0,0,0,0.70);\r\n        position: fixed;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100vh;\r\n        display: none;\r\n        z-index: 2;\r\n    }\r\n```\r\n#### css 实现图片自填充\r\n\r\n```css\r\n    img{\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n```\r\n\r\n#### css防止点击阴影出现\r\n\r\n> -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n\r\n#### css 文字渐变效果\r\n\r\n```css\r\nbackground: linear-gradient(to right, #FEE779 100%, #F9C93C 100%);\r\nbackground-clip: text;\r\ncolor: transparent;\r\n```\r\n\r\n#### 高度自适应\r\n\r\n> height设为0， padding-bottom百分比是根据占宽度百分比计算的\r\n\r\n#### css计数器\r\n\r\n```css\r\nul {\r\n    counter-reset: section;\r\n}\r\nli {\r\n    counter-increment: section;\r\n    content: \"li \" counter(section) \":\" ;\r\n}\r\n```\r\n\r\n#### css 文本溢出省略号\r\n\r\n```css\r\noverflow: hidden;\r\ntext-overflow:ellipsis;\r\nwhite-space: nowrap;\r\n```",
        "score": 1.0
      },
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/39",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/39/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/39/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/39/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/39",
        "id": 520610695,
        "node_id": "MDU6SXNzdWU1MjA2MTA2OTU=",
        "number": 39,
        "title": "日常之React技巧集",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247584816,
            "node_id": "MDU6TGFiZWwxMjQ3NTg0ODE2",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/%E5%B7%A5%E5%85%B7%E3%80%81%E5%BA%93%E4%B8%8E%E6%A1%86%E6%9E%B6",
            "name": "工具、库与框架",
            "color": "d67e13",
            "default": false,
            "description": "工具、库与框架"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-10T14:46:15Z",
        "updated_at": "2019-11-10T15:51:20Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "#### 组件无痕封装\r\n\r\n```js\r\nconst childrenWithProps = React.Children.map(\r\n   this.props.children,\r\n   (child :any) => {\r\n   // console.log(child);\r\n   return React.cloneElement(child, {\r\n         onTouchStart: this.handleTouchStart,\r\n         onTouchMove: this.handleTouchMove,\r\n         style: {transform: this.transform_str, width: `${this.material_size.width}px`, height: `${this.material_size.height}px`}\r\n        })\r\n   }\r\n)\r\n```\r\n\r\n#### React 纯es6风格代码示例\r\n\r\n```js\r\nclass Employee extends Component<Props, State> {\r\n    state: State = {\r\n        loading: false,\r\n        showModal: false,\r\n        edit: false,\r\n        rowData: {}\r\n    }\r\n    setLoading = (loading: boolean) => {\r\n        this.setState({\r\n            loading\r\n        })\r\n    }\r\n    hideModal = () => {\r\n        this.setState({\r\n            showModal: false,\r\n            rowData: {}\r\n        })\r\n    }\r\n    handleCreate = () => {\r\n        this.setState({\r\n            showModal: true,\r\n            edit: false,\r\n            rowData: {}\r\n        });\r\n    }\r\n    handleDelete = (param: DeleteRequest) => {\r\n        this.props.onDeleteEmployee(param)\r\n    }\r\n    handleUpdate = (record: EmployeeInfo) => {\r\n        this.setState({\r\n            showModal: true,\r\n            edit: true,\r\n            rowData: record\r\n        });\r\n    }\r\n    handleDownload = () => {\r\n        window.open(DOWNLOAD_EMPLOYEE_URL);\r\n    }\r\n    render() {\r\n        const {\r\n            employeeList,\r\n            onGetEmployee,\r\n            onCreateEmployee,\r\n            onUpdateEmployee\r\n        } = this.props;\r\n        return (\r\n            <>\r\n                <QueryForm getData={onGetEmployee} setLoading={this.setLoading} />\r\n                <div className=\"toolbar\">\r\n                    <Button type=\"primary\" icon=\"plus\" onClick={this.handleCreate}>添加新员工</Button>\r\n                    <Button type=\"primary\" icon=\"download\" onClick={this.handleDownload} className=\"right\">导出</Button>\r\n                </div>\r\n                <InfoModal\r\n                    visible={this.state.showModal}\r\n                    edit={this.state.edit}\r\n                    rowData={this.state.rowData}\r\n                    hide={this.hideModal}\r\n                    createData={onCreateEmployee}\r\n                    updateData={onUpdateEmployee}\r\n                />\r\n                <Table\r\n                    columns={getColunms(this.handleUpdate, this.handleDelete)}\r\n                    dataSource={employeeList}\r\n                    loading={this.state.loading}\r\n                    className=\"table\"\r\n                    pagination={false}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n```\r\n\r\n#### React不用div\r\n\r\n```html\r\n<React.Fragment></React.Fragment>\r\n也可写成\r\n<></>\r\n```\r\n\r\n#### 不错的eslint规范\r\n\r\n> eslint-config-airbnb\r\n> eslint-config-airbnb-base",
        "score": 1.0
      },
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/38",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/38/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/38/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/38/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/38",
        "id": 520610251,
        "node_id": "MDU6SXNzdWU1MjA2MTAyNTE=",
        "number": 38,
        "title": "日常之js技巧集",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247499785,
            "node_id": "MDU6TGFiZWwxMjQ3NDk5Nzg1",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/JS%E4%B8%93%E9%A2%98",
            "name": "JS专题",
            "color": "e53d5c",
            "default": false,
            "description": "JS专题"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-10T14:42:27Z",
        "updated_at": "2020-02-23T09:28:00Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "#### 种Cookie\r\n\r\n```js\r\nvar C = {\r\n    /*cookie*/\r\n    getCookie: function(name) {\r\n        var cookie_start = document.cookie.indexOf(name + \"=\"),\r\n            cookie_end = document.cookie.indexOf(\";\", cookie_start);\r\n        return cookie_start == -1\r\n            ? \"\"\r\n            : unescape(\r\n                  document.cookie.substring(\r\n                      cookie_start + name.length + 1,\r\n                      cookie_end > cookie_start ? cookie_end : document.cookie.length\r\n                  )\r\n              );\r\n    },\r\n\r\n    setCookie: function(name, value, isSession) {\r\n        var expires = new Date();\r\n        expires.setTime(expires.getTime() + 2592000000);\r\n        //1month\r\n        var path_domain =\r\n            \"; path=/\" +\r\n            (document.domain.indexOf(\"vdian.com\") != -1\r\n                ? \"; domain=vdian.com\"\r\n                : document.domain.indexOf(\"koudai.com\") != -1\r\n                    ? \"; domain=koudai.com\"\r\n                    : document.domain.indexOf(\"weidian.com\") != -1 ? \"; domain=weidian.com\" : \"\");\r\n        if (typeof name === \"object\") {\r\n            for (var v in name) {\r\n                var cookie_content = escape(v) + \"=\" + escape(name[v]);\r\n                document.cookie = cookie_content + \"; expires=\" + expires.toGMTString() + path_domain;\r\n            }\r\n        } else {\r\n            var cookie_content = escape(name) + \"=\" + escape(value);\r\n            console.log(cookie_content + (isSession ? \"\" : \"; expires=\" + expires.toGMTString()) + path_domain);\r\n            document.cookie = cookie_content + (isSession ? \"\" : \"; expires=\" + expires.toGMTString()) + path_domain;\r\n        }\r\n    },\r\n    delCookie: function(name) {\r\n        var path_domain =\r\n            \"; path=/\" +\r\n            (document.domain.indexOf(\"vdian.com\") != -1\r\n                ? \"; domain=vdian.com\"\r\n                : document.domain.indexOf(\"koudai.com\") != -1\r\n                    ? \"; domain=koudai.com\"\r\n                    : document.domain.indexOf(\"weidian.com\") != -1 ? \"; domain=weidian.com\" : \"\");\r\n        document.cookie = escape(name) + \"=; expires=\" + new Date(0).toUTCString() + path_domain;\r\n    },\r\n    clearCookie: function() {\r\n        var _keys = document.cookie.match(/[^ =;]+(?=\\=)/g);\r\n        if (_keys) {\r\n            var l = _keys.length;\r\n            for (var i = l; i--; ) {\r\n                C.delCookie(_keys[i]);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nfunction setCookieStr(cookieStr) {\r\n    cookieStr.split(\";\").forEach(value => {\r\n        let item = value.split(\"=\");\r\n        C.setCookie(item[0].trim(), item[1].trim());\r\n    });\r\n}\r\n\r\nsetCookieStr('blabla')\r\n```\r\n\r\n#### 纯前端跨域下载方案\r\n\r\n```js\r\nconst download = (info) => async () => {\r\n    let getFile = await fetch(info);\r\n    getFile = await getFile.blob();\r\n    let a = document.createElement('a');\r\n    document.body.appendChild(a);\r\n    let url = window.URL.createObjectURL(getFile);\r\n    a.href = url;\r\n    a.download = name;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    document.body.removeChild(a);\r\n }\r\n 这是一个纯前端跨域下载方案。\r\n```\r\n#### koa实现代理跨域\r\n\r\n```js\r\nconst Koa = require('koa')\r\nconst httpProxy = require('http-proxy-middleware')\r\nconst app = new Koa()\r\n\r\napp.use(async(ctx, next) => {\r\n    if(ctx.url.startsWith('/api')) {\r\n        ctx.respond = false;\r\n        await httpProxy({\r\n            target: 'http://someapi.com',\r\n            changeOrigin: true,\r\n            secure: false,\r\n            pathRewrite:{\r\n                '^/api':\"\"\r\n            }\r\n        })(ctx.req, ctx.res, next);\r\n    }\r\n    await next();\r\n})\r\n```\r\n\r\n#### JSON 从buffer获取原型\r\n\r\n```js\r\nlet json = JSON.parse(jsonBuffer.toString())\r\n```\r\n\r\n#### 替换资源路径为相对协议头\r\n\r\n```js\r\nJSON.parse(JSON.stringify(data).replace(/(http:)|(https:)/g, ''))\r\n```\r\n\r\n#### 有关区域时间点判断逻辑的方法\r\n\r\n[时间戳概念](https://www.liaoxuefeng.com/wiki/1022910821149312/1023021626575072)\r\n\r\n\r\n[如何调整时区](https://blog.csdn.net/u012193330/article/details/79637660)\r\n\r\n这里注意GMT时间和UTC时间是不同的，UTC更加精确些\r\n\r\n```js\r\n// GMT算法\r\n\r\nlet offset_GMT = new Date().getTimezoneOffset();\r\nlet now = new Date().getTime();\r\n// targetDate是指当前目标地区的时间对应的时间戳\r\nlet targetDate = now + offset_GMT * 60 * 1000 + timezone_ind * 60 * 60 * 1000;\r\n```\r\n\r\n#### 拍照图像处理+base64URL编码转blob对象\r\n\r\n```ts\r\nimport * as EXIF from 'exif-js' ;\r\n\r\ntype imageUtilConfig = {\r\n  max_side: number;\r\n  min_side: number;\r\n}\r\n\r\ntype imageInfo = {\r\n  img;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst convertBase64UrlToBlob = (urlData: string) => {\r\n  let binaryString = atob(urlData.split(',')[1]);\r\n  let arrayBuffer = new ArrayBuffer(binaryString.length);\r\n  let intArray = new Uint8Array(arrayBuffer);\r\n  let mime = urlData.split(',')[0].match(/:(.*?);/)[1];\r\n  for (let i = 0, j = binaryString.length; i < j; i++) {\r\n      intArray[i] = binaryString.charCodeAt(i);\r\n  }\r\n  let data = [intArray];\r\n  let result = new Blob(data, { type: mime });\r\n  return result;\r\n}\r\n\r\n\r\nconst fixOrientationAndCompress = async (file, config?: imageUtilConfig, cb?) => {\r\n  if (!file) {\r\n    return;\r\n  }\r\n  let orientation = null;\r\n  let camera_info: number = await new Promise(resolve => {\r\n    EXIF.getData(file, function () {\r\n      orientation = EXIF.getTag(this, 'Orientation');\r\n      resolve(orientation);\r\n    })\r\n  });\r\n  orientation = camera_info || 0;\r\n  let img_info :imageInfo = await new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onloadend = function () {\r\n      if (reader.error) {\r\n          reject();\r\n          return;\r\n      }\r\n      let img: any = new Image();\r\n      img.onload = function () {\r\n        resolve({ img, width: img.width, height: img.height });\r\n      };\r\n\r\n      img.src = reader.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  });\r\n  let {img, width, height} = img_info;\r\n  const img_max_side = Math.max(width, height);\r\n  const img_min_side = Math.min(width, height);\r\n  const {max_side, min_side} = config ? config : {max_side: 1280, min_side: 720};\r\n  if (img_max_side > max_side || img_min_side > min_side) {\r\n    const scaleRatio = Math.max(img_min_side / min_side, img_max_side / max_side);\r\n    width = width / scaleRatio;\r\n    height = height / scaleRatio;\r\n  }\r\n  const canvas = document.createElement('canvas');\r\n  canvas.style.border = '1px solid red';\r\n  const ctx = canvas.getContext('2d');\r\n  switch (orientation) {\r\n      case 3: {\r\n          // 180\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n          ctx.rotate(Math.PI);\r\n          ctx.drawImage(img, -width, -height, width, height);\r\n          break;\r\n      }\r\n      case 6: {\r\n          // 顺时针转90\r\n          canvas.width = height;\r\n          canvas.height = width;\r\n          ctx.rotate(Math.PI / 2);\r\n          ctx.drawImage(img, 0, -height, width, height);\r\n          break;\r\n      }\r\n      case 8: {\r\n          // 逆时针转90\r\n          canvas.width = height;\r\n          canvas.height = width;\r\n          ctx.rotate(Math.PI * 3 / 2);\r\n          ctx.drawImage(img, -width, 0, width, height);\r\n          break;\r\n      }\r\n      default: {\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n          ctx.drawImage(img, 0, 0, width, height);\r\n          break;\r\n      }\r\n  }\r\n  const dataUrl = canvas.toDataURL(file.type || 'image/png');\r\n  return {dataUrl, file: convertBase64UrlToBlob(dataUrl)};\r\n}\r\n\r\nexport default fixOrientationAndCompress;\r\n\r\n```\r\n\r\n#### 补丁法解决rem布局在部分安卓机出现的适配问题\r\n\r\n```js\r\nvar html_font = parseFloat(document.documentElement.style.fontSize);\r\nvar user_webset_font = null;\r\nif (document.documentElement.currentStyle) {\r\nuser_webset_font=parseFloat(document.documentElement.currentStyle['fontSize']);\r\n} else {\r\n//- 获取当前元素最终使用的css属性值\r\nuser_webset_font=parseFloat(getComputedStyle(document.documentElement,false)['fontSize']);\r\n}\r\nif (html_font !== user_webset_font) {\r\ndocument.documentElement.style.cssText = 'font-size: ' + html_font * (html_font / user_webset_font) + 'px';\r\n}\r\n```\r\n\r\n#### Rest参数拓展运算符\r\n\r\n```js\r\n// 有一些比较惊艳的写法可以看下\r\nfunction testArr(...rest) {\r\n    let sum = 0;\r\n    console.log(rest);\r\n    for(let i of rest) {\r\n        sum += i;\r\n    }\r\n    return sum;\r\n}\r\nconsole.log(testArr(1, 2, 3 ,4));\r\n```\r\n\r\n#### 从对象中提取指定的key\r\n\r\n```js\r\nconst objectall = {\r\n  a: 1,\r\n  b: 2,\r\n  c: 3\r\n};\r\n\r\nconst getNewObject = chosenKeys =>\r\n  Object.keys(objectall)\r\n    .filter(val => chosenKeys.includes(val))\r\n    .reduce((res, key) => {\r\n      res[key] = objectall[key];\r\n      return res;\r\n    }, {});\r\nconsole.log(getNewObject(\"a\"));\r\nconsole.log(getNewObject([\"a\", \"b\"]));\r\n```\r\n\r\n#### 剪贴板复制\r\n\r\n```js\r\nlet link_input = document.createElement('input');\r\nlink_input.value = window.location.href;\r\nlink_input.readOnly = 'readOnly';\r\ndocument.body.appendChild(link_input);\r\nlet isIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/); \r\nisIOS && link_input.setSelectionRange(0, 9999) || link_input.select();\r\nif (document.execCommand('copy')) {\r\n    document.execCommand('copy');\r\n    console.log('复制成功');\r\n}\r\ndocument.body.removeChild(link_input);\r\n```\r\n\r\n\r\n",
        "score": 1.0
      },
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/37",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/37/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/37/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/37/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/37",
        "id": 449046413,
        "node_id": "MDU6SXNzdWU0NDkwNDY0MTM=",
        "number": 37,
        "title": "移动端web调试方法",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247584816,
            "node_id": "MDU6TGFiZWwxMjQ3NTg0ODE2",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/%E5%B7%A5%E5%85%B7%E3%80%81%E5%BA%93%E4%B8%8E%E6%A1%86%E6%9E%B6",
            "name": "工具、库与框架",
            "color": "d67e13",
            "default": false,
            "description": "工具、库与框架"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-28T03:19:31Z",
        "updated_at": "2019-05-28T15:28:15Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "# 移动端web调试方法\r\n\r\n在很多时候，通过chrome浏览器进行调试和时候无论是样式还是功能都会与真机有一定出入，所以移动端调试web页面比较重要，记录三种方法先。\r\n\r\n## 连线\r\n\r\n方法如名，直接将手机和电脑相连再通过chrome的dev调试。大牛总结很多了，这里贴个链接。\r\n[机连调试方法](https://segmentfault.com/a/1190000005964730)\r\n\r\n## 移动端访问ip\r\n\r\n先在电脑上启动本地应用，然后ifconfig（mac命令）查看ip，假如是在本地localhost:8000启的应用，直接在手机浏览器里输入ip:8000就可以了。缺点就是如果某些app需要端内调试，以ip开头的地址不一定会被识别。\r\n\r\n## charles代理\r\n\r\n这个个人觉得是最好用的办法了，先打开charles，手机连wifi开启手动代理模式，输入电脑ip和设定的某个端口。然后通过charles就可以抓住手机访问各种网页的各种请求了(比如如果没加密的话也可以抓cookie哦，并且可以把cookie种到浏览器里面，这样浏览器还能模拟移动端的登录状态2333），但是手机上不能输入localhost来直接访问，因为手机上的localhost是手机本身。。。。。解决方案如下～\r\n\r\n```shell\r\nsudo vim /etc/hosts\r\n```\r\n\r\n加入一行：\r\n127.0.0.1             想要的测试地址名\r\n\r\n生效后就可以了",
        "score": 1.0
      }
    ]
  },
  "singleIssue": {
    "content": {
      "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/1",
      "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
      "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/1/labels{/name}",
      "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/1/comments",
      "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/1/events",
      "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/1",
      "id": 414017995,
      "node_id": "MDU6SXNzdWU0MTQwMTc5OTU=",
      "number": 1,
      "title": "前言",
      "user": {
        "login": "Jackson-p",
        "id": 20417123,
        "node_id": "MDQ6VXNlcjIwNDE3MTIz",
        "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jackson-p",
        "html_url": "https://github.com/Jackson-p",
        "followers_url": "https://api.github.com/users/Jackson-p/followers",
        "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
        "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
        "repos_url": "https://api.github.com/users/Jackson-p/repos",
        "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1247499783,
          "node_id": "MDU6TGFiZWwxMjQ3NDk5Nzgz",
          "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/Life",
          "name": "Life",
          "color": "f5ff9b",
          "default": false,
          "description": "Just some diaries"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-02-25T09:49:59Z",
      "updated_at": "2019-02-25T09:49:59Z",
      "closed_at": null,
      "author_association": "OWNER",
      "body": "# 前言\r\n\r\n终于用React完成了这个个人网站，中间也遇到了一些问题：webpack的基本配置，包的安装，React组件开发，React-router的使用，在React中独立出来的Dom操作，github的issue上提取博文相关内容及评论，并解析成markdown内容\b、代码高亮，点击进入分类，展示分页，onscroll、flex等兼容性处理，css响应式设计布局以适配多种终端等等，然后我把路途中遇到的事以日记的形式记录下来吧。（提示：日记中有的处理方案是尝试过后错误的，但是在后面往往都提出了\b更好的解决方案，因此不要把这篇日记当成是手把手那种教程来看待～）\r\n\r\n------\r\n\r\n## 心路\r\n\r\n6.14日\r\n按照官网上的指示进行学习，因为是自己搭的，没有用脚手架还是比较新的webpack4.0,看看文档解决了很多问题\r\n\r\n开始配webpack和目录位置等，试试es-lint, npm --save install sth 是以前用过的\r\n安装包的同时会把版本号记录到package.json里面,--save-dev会安装到devDependencies里\r\ndependencies：项目跑起来后需要使用到的模块\r\ndevDependencies：开发的时候需要用的模块，但是项目跑起来后就不需要了\r\n\r\n配置react项目最重要的两个文件是入口文件（这里是src/index.js）和html模板文件(这里是public/index.html)，入口文件是整个项目开始运行的地方，模板文件是构建DOM树的地方，相信有一部分小伙伴在网上看到的教程是直接在打包路径build里面建一个index.html，然后手动或者使用html-webpack-plugin将打包后的js引入，这样存在一个问题是build本身是打包路径，而这个路径的所有文件都不应该是我们手动去添加的，甚至包括这个文件夹也不是我们事先建好的。所以最好是按照create-react-app的方式，将这类不需要被webpack编译的文件放到public路径下\r\n\r\n现在要让webpack知道这就是我们的html入口文件，并且我们不需要手动引入打包后的js文件，需要安装html-webpack-plugin:\r\n这个插件的作用，个人理解是在打包好的bundle.js同目录下生成一份模版HTML\r\n然后报错了hhh，更新太快，为了练webpack，先不用成熟脚手架create-react-app了，虽然很好用，但留着做后路.\r\n果然网上的教程都已经过时了，只好完整地看下webpack的文档了，明天先搭一个webpack环境出来吧\r\n没没，仔细看了一下问题解决了！\r\n\r\n别着急运行，react里面的JSX语法普通浏览器可解析不了，需要安装babel来解析：\r\nnpm install babel babel-cli babel-loader --save-dev\r\n再安装两个分别用于解析es6和jsx语法的插件：\r\nnpm install babel-preset-env babel-preset-react --save-dev\r\n走到这里还是不行了，webpack变化太大了好像还出了新东西，慢慢来看webpack文档自己重新搭吧orz,华丽的分界线\r\n\r\n------\r\n\r\n6.15日\r\n忘记昨日 自己搭。。\r\n先学习了一下path的相关内容\r\npath.resolve 把某路径组合解析为绝对路径\r\n\r\n```js\r\npath.resolve('/foo/bar', './baz')\r\n// returns '/foo/bar/baz'\r\n\r\npath.resolve('/foo/bar', '/tmp/file/')\r\n// returns '/tmp/file'\r\n\r\npath.resolve('wwwroot', 'static_files/png/', '../gif/image.gif')\r\n// if the current working directory is /home/myself/node,\r\n// this returns '/home/myself/node/wwwroot/static_files/gif/image.gif'\r\n```\r\n\r\nnpm v5.2.0引入的一条命令（npx），引入这个命令的目的是为了提升开发者使用包内提供的命令行工具的体验。\r\n\r\n1、临时安装可执行依赖包，不用全局安装，不用担心长期的污染。\r\n2、可以执行依赖包中的命令，安装完成自动运行。\r\n3、自动加载node_modules中依赖包，不用指定$PATH。\r\n4、可以指定node版本、命令的版本，解决了不同项目使用不同版本的命令的问题\r\n\r\n[为css增加类名的方法](https://blog.csdn.net/nanhupatar/article/details/79101797)\r\n\r\n嗯嗯今天算是学到了webpack多输入多输出和那个HtmlWebpackPlugin其实是动态根据自己的bundle.js生成相关的index.html模版的\r\n\r\n一顿操作之后还不知道是babel出现了问题，还是webpack出现了问题，现在git clone老项目下来的话包好像都不好使了，同样的招数不是总管用，技术更新太快\r\n再来之前是安装webpack官网教程来的这里从新开始\r\n这里先把后面的clean掉dist里面那个插件删掉了用的不多\r\n心得babel这里不是先看babel的官网而是先看webpack的官网，再去观察babel-loader中需要的部分，react官网给的则是人家自己的脚手架555,好吧我错了，接着还是要看babel有没有能搞react的插件。。\r\n果然巨讨厌的问题：Uncaught Error: Target container is not a DOM element.\r\n简单说就是额，，，react没抓到那个root，我到现在。。至少排除了react解析的错误，还是单纯解决webpack的问题再说...我擦问题的所在就是那个插件官网上的HTMLwebpackplugin可能我用的不对吧，每次webpack后这个html都会重新生成会导致里面的DOM元素直接凉掉，当然啥也没有。。。\r\n终于好使了，核心在于不太熟别乱加,devserver其实很简单 就是打开某文档位置作为Web服务根目录\r\n至此算是完成了development模式下的配置\r\n\r\n6.16 开始正式开发啦\r\n先想看看用antd是怎样的 结果安装报错\r\nUnexpected end of JSON input while parsing near '...oattachment\":false,\"t'\r\n改变淘宝代理设置回去就行\r\n\r\nnpm config set registry ht tp://registry.cnpmjs.org\r\n\r\n遇到了没实时刷新的问题\r\n//publicPath: './dist' =>  publicPath: '/dist'\r\n就可以了emmm\r\n这里用的新方法不同 以往不是用的import导入css 而是在主页面进行引用，不太喜欢吧，既然用webpack就包一起吧\r\n注意在书写components中的路径时，才发现虚拟DOM部分对应的路径开始并不是当前路径，而是 项目整体所在的目录，所以用了'./src'\r\n\r\n看到这里一定要时不时去看看flex布局orz,所以也抛弃了以前的简单浮动方式，因为看了下github也是用的flex布局所以尝试下(antd用的是简单的ul+li传统的那种方法)\r\n回头学到在ReactDOM操作的时候可以用渲染去搞那个a标签的变色\r\n注意react最后render的只是一个结点，所以中间有的那些自定义插件都要放在一个div里\r\n突然发现一个坑：如果bundle进了css的话，里面引用的图片名字都不能后改，否则会报错，所以如果要bundlecss的话起名要慎重。。。。，否则我觉得可能要删掉这个bundle重新来一下了orz\r\n sorry 是我没改js里的路径蠢了蠢了上面的话不算\r\n\r\n6.18 我想先学着从issue里提取数据,然后解决一下webpack直接打包没图片的问题，我觉得。。。这是loader的问题orz\r\n问题出在了这个图片是通过css的background-img引用的，所以用的是“实路径”.\r\n看了官网的file-loader之后知道要在option里改下名字，发现输出了disbcg.jpg到dist文件夹下，突然想到output那里的publicpath。。。。\r\n\r\n其实是本地读取图片时的path在作妖,publicPath只会影响本地\r\nGET file:///Users/wanghy/Documents/React-blog/+/src/img/bcg.jpg 0 ()\r\n其实是这样一种囧境。。。\r\n事到如今我才发现bundle.js的位置不是无缘无故放在那里的。。。。应该删掉dist，放在src里,最后兼顾本地直接打开，服务器打开，development测试的方法，改变weback输出位置，共用src\r\n\r\n然后又出现了新的问题\r\n：不即时更新了。。。老问题 注意下publicPath.要去掉。。publicPath是输出解析文件的目录也就是这里devServer的解析目录和图片的解析起始目录\r\n\r\n6.20 虽是繁忙的期末考试，但是因为失眠总还是解决了图片问题和提取issue问题\r\n注意用箭头函数的方法声明组件的时候是圆括号\r\n\r\n6.21 今天突然发现。。。额，本地打包会有问题orz，要在publicPath那里加个点。。。\r\n\r\n最近都忙着各科期末考试，先把要做的记录下来\r\n\r\n6.26 重回开发：先是解决了一个jsx中标签与语句变量的问题，又解决了一个setstate渲染和Didmount问题；html引用js变量用{},html引用js函数用</>看似简单，容易错\r\n,写样式自己写一个时间处理函数把issue里的时间用正则截一截这里用match\r\n\\i大小写,\\g全局等当复习了,遇到的问题当然就是怎么在传递数据的过程中标准化这个时间了orz,之前错的原因有exec主体用反了了，和正则里最后不应该有$有点儿思维定式\r\n今天就到react-router这里吧，明天实现打开一个issue进去之后能看到详情页就好啦，差点儿忘了首页的省略号，插件参考react-newspublish，后天实现标签转换，然后还有4天就小学期开学了，设计方面应该不是问题，没准可以在小学期结束之前完成这个小demo？算了，重点还是练响应式布局和react\r\n\r\n6.27开始写router和link好像router中的route定义路径里的内容，而link对应跳转，试试在index中定义,然后改成了root为入口，然后突然发现～Link标签的本质就是一个a标签哈～但注意linkto的地址是已经建立在'/'之上的,text-overflow: ellipsis;和white-space,但只能局限于1行觉得不是太合适，所以还是摘要固定字数吧,用js手动再补一个'...'机智\r\n遇到新的问题就是在其他页面中引入首页的这个。。。,路由会改变路径从而导致img 虚拟src发生变化orz,emm..先用报错的方法解决以后碰到好的了要回更，更重要的是index.html打包不好使了突然！！应该是router的事,和webpack关系不是太大,改用hash router 成功解决，这个两个的区别还是要知道一下的，，，，，好像顺便也解决了图片问题！\r\n借用了下marked.js渲染markdown emmm.直接插入html好像不是那么安全,缺点是不能用>\r\n然后看到了有关css3 box-shadow不错的讲解 三个参数：水平位移，垂直位移，模糊半径。\r\n[参考](http://www.css88.com/tool/css3Preview/Box-Shadow.html)\r\n然后用下highlight.js可以和marked无缝连接的做代码高亮,可好像只有代码效果，手动加的pre的背景颜色orz\r\n6.28 看看今天能不能把issue都做完？顺便把router也做完？\r\n先看看能不能提取指定的标签下的issue,这个逻辑比较混乱真是，然后成功意识到了哇props从父组件到子组件的传递真的是非常有效的呢，但是直接从Label里提到所属文章是不可能了..然后自己都不知道竟然这么简单就实现了标签分页～\r\n然后感觉碰到了麻烦，解决了分页的话issue就基本就做完啦\r\npage的控制部分应该在显示页面之前，也就是通过props给artibody传值,现在其实还不是太明白那个this.function.bind(this)的写法的含义到底是什么，真是太菜了，回头一定要好好看看\r\n突然想到react好处：\r\n1、组件化，可复用\r\n2、避免了大量的DOM操作，快\r\n3、数据流动简单，含state和prop\r\n2*undefined+1 =NAN 惊了\r\n\r\n在一开始写图片无法读取的备用性方案时有一个如果图片加载不出来就加载预备图片的方案如下\r\n\r\n```js\r\nonError={(e)=>{e.target.src=\"../src/img/head.jpeg\"}}\r\n```\r\n\r\n>可以回头看各种router\r\n觉得对react有帮助\r\n> 原css\r\n\r\n```css\r\n    .pc-artiTem-body p{\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    width: 300px;\r\n    height: 100px;\r\n    white-space: nowrap;\r\n}\r\n```\r\n\r\n```txt\r\nissue完整博客系统+demo页+router+补充动态设计+相应页布局+精简整理代码\r\n代码风格之命名规范：文件名下划线，css类名中划线，函数驼峰，组件双驼峰命名\r\n```\r\n\r\n终于写到了demo页和about页，逻辑之类的相对还是好写一点，还是设计与内容相对难想些\r\n\r\n有关box-shadow的思考。。。\r\n\r\n有关-webkit等浏览器内核样式的思考（莫非我真的是css不行？）\r\n\r\n我今天好像终于知道了ghpages是干嘛的了，好像是让多个页面都使用github那一个仓库，这样就能把自己的项目都放到线上了\r\n\r\n用了ref中的scroll into view + 设定个node ，轻松解决锚点问题\r\n\r\n[css透明度问题](https://www.cnblogs.com/PeunZhang/p/4089894.html)\r\n\r\n6.29 哇我感觉今天就能把about都能写完\r\n\r\n6.30 今天我感觉能把PC端搞定。。。。\r\n\r\n## 待修正与升级\r\n\r\n### 设计与交互层面\r\n\r\n* 页面scroll down时文字链接部分向下消失，否则向上消失 ok\r\n\r\n* 文章页进去之后那个超美的天空层背景色带 ok\r\n\r\n* 要有“一键升天” ok\r\n\r\n* 确定选定后变色(可参考antd) ok\r\n\r\n* 移动到顶时调整header透明度几乎为0，下滑消失，上滑出现 ok\r\n\r\n### 逻辑层面\r\n\r\n* 从issue里提取数据生成比较基础的随笔页在首页，右侧是分类，还要有标签 v（实现了更合适的 ok\r\n\r\n* react-router文档看下实现切换页面 （懂了怎么用了） ok\r\n\r\n* [参考三](https://segmentfault.com/a/1190000011399153)\r\n\r\n------\r\n\r\n6.30 好吧真的就差那一丢丢，问题出现在pc_header的setstate他说出现了在未渲染时，可我明明设定的监听函数是在componentDidmount中的，费解。。。这点是warning，回头好好学一学看问题到底出在哪？先别急着用index的props解决,明白了问题其实就是叠加。。。所以关键就在于middle.js中willUnmount中把listener去掉，这里注意removelistener中取消的第二个参数，最后是绑定到了constructor的this里，解决！\r\n\r\n搞定后剩下的就是细水长流留了，响应式布局针对所有大屏小屏移动端适配哇。。。。\r\n前端性能优化webpack按需加载，服务器端渲染\r\n代码精简，结构重构\r\n\r\n* 响应式设计(包括em和rem)\r\n\r\n* [参考一](https://ant.design/components/dropdown-cn/#)\r\n\r\n* 也可以参考alloyteam的响应式设计\r\n\r\n* [em弹性布局](https://www.w3cplus.com/css/px-to-em)\r\n\r\n哇，真的是一晚上的时间才写了一个响应式的header啊orz，flex布局+用了点儿antdesigin的栅格+自己手写了一个label隐藏input模仿js点击事件+媒体查询总算写出来了，可是感觉封装性，后头还是写不出来封装的吧哈哈，写的时候再说吧，没到那个项目呢\r\n\r\n7.2了，这一阵子只有晚上可以做响应式了，白天学校有硬件综合训练orz\r\n[对响应式布局的意见](http://www.chinaz.com/news/2016/0106/492567.shtml#content-media5)\r\n不得不说写了响应式之后确实变慢了。。。可能是我写法的问题，而且还有emmm...header的动态问题,媒体查询+百分比是目前解决响应式布局的唯一方案？（至少连Boostrap都是这么做的,回头总结的时候要顺便看下Ant-design），react应该也是这样的，而flex布局是解决适配问题的,flex也可以用来帮助解决响应式布局哈哈，后来上知乎问了下，其实媒体查询并不会怎么影响页面的性能，除非是引起大量的重绘重排这种。。。\r\n用git clone git://xxoo --depth 1看看可不可以真的让项目变小，传一下～\r\n现在的问题还有点击文章类跳转的锚问题和兼容性问题\r\n\r\n7.7 03:20 失眠了 起来敲代码，正好解决一下用正则表达式来处理Markdown文本那一部分，但是在处理 \"* \"时出现了麻烦\r\n正则表达式还是得多练啊，下述是目前可以进行修改或者说优化的问题，从而可以深入地学习一下兼容性，懒加载、预加载，和正则表达式\r\n\r\n* 对Mac safari的兼容性（部分画面不好看)\r\n* 对图片读取的优化（懒加载、预加载？）\r\n* js过滤出Markdown中的纯文本\r\n\r\n现在先解决Mac safari兼容性问题可以,解决了样式问题和动画特效问题，学到了特别吊解决scollTop的方案（兼容所有浏览器）,多了一个background其实也可以好好写写\r\n\r\n7.9我又来做评论系统了～，页面显示下评论就行，但是评论授权就算了那还不如跳转。\r\n然后处理一下IE上不兼容的问题？  应该是babel解析es 6相关的问题，我看看用babel-polyfill cdn引入可不可以把～,\r\n今天有大神的request到我这里然后我再进行优化修改吧，有一定问题大神那个，导致直接报错，所以只是一个参考思路，这番折腾，还是git用得不够溜啊\r\n7.12完成了个人觉得比较合理的评论界面，因为比较简单算是自带响应式的吧，然后下一步就是对着大神的指示进行优化，看看到底可不可以让它的bundle变小很多同时兼容ie,55555\r\n我写的笔记不见了，，，，也不到怎么了，可能有失误的操作忘保存啥的，先解决一下flex垂直居中在ie上的兼容性问题，\r\n然后整理代码规范，写博文，这个bundle优化可以以后学到了好的方法再弄，哦对，超级感谢前辈的指点兼容ie11和bundle简化的方案。\r\n接下来其实算是我所解决的最后一个问题，那就是页面无法在ie上运行，和bundle.js打包较大，打包较大的问题有点儿傻了，自己做测试的development是一个，实际打包应用的时候应该用production的mode，会减少很多体积。至于无法在ie上运行的问题，解决思路是先看到了bundle.js里面还有class，ie肯定会有问题，然后google为什么webpack打包完成还会有es 6代码，解决后还是不好使发现了es 6的promise，就应该是axios的问题，于是去axios的github issue 里面搜promise 于是找到了官方的es 6-promise解决方案，成功解决了这俩问题。\r\n好了 开发基本就到这告一段落了，然后写个博文总结一下，bundle的优化我觉得其实还好，因为其实光图片就占了1M，打包之后以后1.8M,虽然还是有点儿大，但基本上没啥影响，回头学到了再优化一下～\r\n断断续续跨时1个月吧 算是 哈哈\r\nPS:至此真的要开始准备面试了，再不准备回家种地了，记得回来解决这个bundle.js有点儿大的问题如\r\n[参考](https://www.jianshu.com/p/a64735eb0e2b)\r\n\r\n补充：图片的话一开始是想用的搜狗识图或百度识图的廉价图床，后来发现其实问题没有那么复杂。。。git issue直接拖图就可以，自带上传功能还避免了跨域哈哈哈",
      "closed_by": null
    },
    "comment": [
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/comments/602158954",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/1#issuecomment-602158954",
        "issue_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/1",
        "id": 602158954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjE1ODk1NA==",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-03-22T07:15:04Z",
        "updated_at": "2020-03-22T07:15:04Z",
        "author_association": "OWNER",
        "body": "测试评论1"
      },
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/comments/602158965",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/1#issuecomment-602158965",
        "issue_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/1",
        "id": 602158965,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjE1ODk2NQ==",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-03-22T07:15:09Z",
        "updated_at": "2020-03-22T07:15:09Z",
        "author_association": "OWNER",
        "body": "测试评论2"
      }
    ]
  }
}
