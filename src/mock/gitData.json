{
  "labels": [
    {
      "name": "CSS"
    },
    {
      "name": "前端库与框架"
    },
    {
      "name": "js基础"
    },
    {
      "name": "工程"
    },
    {
      "name": "后端"
    }
  ],
  "issues": {
    "total_count": 41,
    "incomplete_results": false,
    "items": [
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/42",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/42/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/42/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/42/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/42",
        "id": 569467443,
        "node_id": "MDU6SXNzdWU1Njk0Njc0NDM=",
        "number": 42,
        "title": "用React实现一个手势化组件",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247499785,
            "node_id": "MDU6TGFiZWwxMjQ3NDk5Nzg1",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/JS%E4%B8%93%E9%A2%98",
            "name": "JS专题",
            "color": "e53d5c",
            "default": false,
            "description": "JS专题"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-23T09:32:22Z",
        "updated_at": "2020-02-23T09:32:22Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "效果无非就是把一个元素比如图片放在一个控制器里，用户可以通过手势任意修改这个组件的位置、大小、角度等。\r\n\r\n自己实现的代码如下:(细节实现日后再写)\r\n```js\r\nimport React, { Component } from 'react';\r\nimport './style.less'\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\ninterface State {\r\n    x: number;\r\n    y: number;\r\n    s: number;\r\n    r: number;\r\n}\r\n\r\ntype ContollerStyle = {\r\n    transform: string;\r\n    width: string;\r\n    height: string;\r\n}\r\n\r\nexport default class ImgController extends Component<Props, State> {\r\n    translate: Array<number> = [0, 0]\r\n    material_middle: Array<number> = [50, 50]\r\n    touch_start_pos: Array<number> = [0, 0]\r\n    scale: number = 1\r\n    rotate: number = 0\r\n    readonly material_size = {\r\n        width: 100,\r\n        height: 100\r\n    }\r\n\r\n    state: State = {\r\n        x: 0,\r\n        y: 0,\r\n        s: 1,\r\n        r: 0\r\n    }\r\n    \r\n    handleTouchStart = (event) => {\r\n        const touches = event.touches[0];\r\n        this.touch_start_pos = [touches.pageX, touches.pageY];\r\n    }\r\n    handleTouchMove = (event) => {\r\n        const touches = event.touches[0];\r\n        this.material_middle = [\r\n            this.material_middle[0] + touches.pageX - this.touch_start_pos[0],\r\n            this.material_middle[1] + touches.pageY - this.touch_start_pos[1]\r\n        ];\r\n        this.translate = [\r\n            this.translate[0] + touches.pageX - this.touch_start_pos[0],\r\n            this.translate[1] + touches.pageY - this.touch_start_pos[1]\r\n        ];\r\n        this.touch_start_pos = [touches.pageX, touches.pageY];\r\n        this.setState({\r\n            x: this.translate[0],\r\n            y: this.translate[1]\r\n        });\r\n    }\r\n    handleTouchRotate = (event) => {\r\n        const touches = event.touches[0];\r\n        this.scale = Math.sqrt(Math.pow(touches.pageX - this.material_middle[0], 2) + Math.pow(touches.pageY - this.material_middle[1], 2)) / Math.sqrt(Math.pow(this.material_size.width / 2, 2) + Math.pow(this.material_size.height / 2, 2));\r\n        this.rotate = Math.atan2(touches.pageY - this.material_middle[1], touches.pageX - this.material_middle[0]) * 180 / Math.PI - 45;\r\n        this.setState({\r\n            s: this.scale,\r\n            r: this.rotate\r\n        })\r\n        event.stopPropagation();\r\n    }\r\n    render() {\r\n        let controller_style: ContollerStyle = {\r\n            transform: `translate(${this.state.x}px, ${this.state.y}px) scale(${this.state.s}) rotate(${this.state.r}deg)`,\r\n            width: `${this.material_size.width}px`,\r\n            height: `${this.material_size.height}px`\r\n        }\r\n        return (\r\n            <div className=\"image-controller\" \r\n                 onTouchStart={this.handleTouchStart}\r\n                 onTouchMove={this.handleTouchMove}\r\n                 style={controller_style}\r\n                >\r\n                <div className=\"load-img\"></div>\r\n                <div className=\"operator-wrapper\">\r\n                    <span className=\"operator\" onTouchMove={this.handleTouchRotate} ></span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n```",
        "score": 1.0
      },
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/41",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/41/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/41/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/41/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/41",
        "id": 520619857,
        "node_id": "MDU6SXNzdWU1MjA2MTk4NTc=",
        "number": 41,
        "title": "日常之网络与shell",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247585329,
            "node_id": "MDU6TGFiZWwxMjQ3NTg1MzI5",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6",
            "name": "计算机科学",
            "color": "fef2c0",
            "default": false,
            "description": "含数据结构与算法，计算机网络，操作系统，编译原理等"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-10T15:58:33Z",
        "updated_at": "2019-11-10T15:58:33Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "#### Linux常见命令\r\n\r\n* proxychains 通过代理上传（查不到相关资料）\r\n* scp 一般用于linux服务器之间互相传文件\r\n* ps -ef 查看所有程序和进程信息\r\n* cat /proc/2913/status 查看物理内存占用\r\n\r\n#### 请求转发的手段\r\n\r\n本地调试可以用[charles转发功能](https://blog.csdn.net/qq_29674635/article/details/78837210)\r\n其他情况可以走node中间层转发或者是nginx转发",
        "score": 1.0
      },
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/40",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/40/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/40/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/40/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/40",
        "id": 520618034,
        "node_id": "MDU6SXNzdWU1MjA2MTgwMzQ=",
        "number": 40,
        "title": "日常之css技巧",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247499777,
            "node_id": "MDU6TGFiZWwxMjQ3NDk5Nzc3",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/CSS",
            "name": "CSS",
            "color": "2f98d9",
            "default": false,
            "description": "CSS"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-10T15:43:06Z",
        "updated_at": "2019-11-10T16:35:02Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "#### css 实现字体颜色渐变\r\n\r\nhttps://blog.csdn.net/FE_dev/article/details/78450844\r\n```css\r\nbackground: linear-gradient(to right, #FEE779 100%, #F9C93C 100%);\r\nbackground-clip: text;\r\ncolor: transparent;\r\n```\r\n\r\n#### css 遮挡modal效果\r\n\r\n```css\r\n    .cover{\r\n        background: rgba(0,0,0,0.70);\r\n        position: fixed;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100vh;\r\n        display: none;\r\n        z-index: 2;\r\n    }\r\n```\r\n#### css 实现图片自填充\r\n\r\n```css\r\n    img{\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n```\r\n\r\n#### css防止点击阴影出现\r\n\r\n> -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n\r\n#### css 文字渐变效果\r\n\r\n```css\r\nbackground: linear-gradient(to right, #FEE779 100%, #F9C93C 100%);\r\nbackground-clip: text;\r\ncolor: transparent;\r\n```\r\n\r\n#### 高度自适应\r\n\r\n> height设为0， padding-bottom百分比是根据占宽度百分比计算的\r\n\r\n#### css计数器\r\n\r\n```css\r\nul {\r\n    counter-reset: section;\r\n}\r\nli {\r\n    counter-increment: section;\r\n    content: \"li \" counter(section) \":\" ;\r\n}\r\n```\r\n\r\n#### css 文本溢出省略号\r\n\r\n```css\r\noverflow: hidden;\r\ntext-overflow:ellipsis;\r\nwhite-space: nowrap;\r\n```",
        "score": 1.0
      },
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/39",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/39/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/39/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/39/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/39",
        "id": 520610695,
        "node_id": "MDU6SXNzdWU1MjA2MTA2OTU=",
        "number": 39,
        "title": "日常之React技巧集",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247584816,
            "node_id": "MDU6TGFiZWwxMjQ3NTg0ODE2",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/%E5%B7%A5%E5%85%B7%E3%80%81%E5%BA%93%E4%B8%8E%E6%A1%86%E6%9E%B6",
            "name": "工具、库与框架",
            "color": "d67e13",
            "default": false,
            "description": "工具、库与框架"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-10T14:46:15Z",
        "updated_at": "2019-11-10T15:51:20Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "#### 组件无痕封装\r\n\r\n```js\r\nconst childrenWithProps = React.Children.map(\r\n   this.props.children,\r\n   (child :any) => {\r\n   // console.log(child);\r\n   return React.cloneElement(child, {\r\n         onTouchStart: this.handleTouchStart,\r\n         onTouchMove: this.handleTouchMove,\r\n         style: {transform: this.transform_str, width: `${this.material_size.width}px`, height: `${this.material_size.height}px`}\r\n        })\r\n   }\r\n)\r\n```\r\n\r\n#### React 纯es6风格代码示例\r\n\r\n```js\r\nclass Employee extends Component<Props, State> {\r\n    state: State = {\r\n        loading: false,\r\n        showModal: false,\r\n        edit: false,\r\n        rowData: {}\r\n    }\r\n    setLoading = (loading: boolean) => {\r\n        this.setState({\r\n            loading\r\n        })\r\n    }\r\n    hideModal = () => {\r\n        this.setState({\r\n            showModal: false,\r\n            rowData: {}\r\n        })\r\n    }\r\n    handleCreate = () => {\r\n        this.setState({\r\n            showModal: true,\r\n            edit: false,\r\n            rowData: {}\r\n        });\r\n    }\r\n    handleDelete = (param: DeleteRequest) => {\r\n        this.props.onDeleteEmployee(param)\r\n    }\r\n    handleUpdate = (record: EmployeeInfo) => {\r\n        this.setState({\r\n            showModal: true,\r\n            edit: true,\r\n            rowData: record\r\n        });\r\n    }\r\n    handleDownload = () => {\r\n        window.open(DOWNLOAD_EMPLOYEE_URL);\r\n    }\r\n    render() {\r\n        const {\r\n            employeeList,\r\n            onGetEmployee,\r\n            onCreateEmployee,\r\n            onUpdateEmployee\r\n        } = this.props;\r\n        return (\r\n            <>\r\n                <QueryForm getData={onGetEmployee} setLoading={this.setLoading} />\r\n                <div className=\"toolbar\">\r\n                    <Button type=\"primary\" icon=\"plus\" onClick={this.handleCreate}>添加新员工</Button>\r\n                    <Button type=\"primary\" icon=\"download\" onClick={this.handleDownload} className=\"right\">导出</Button>\r\n                </div>\r\n                <InfoModal\r\n                    visible={this.state.showModal}\r\n                    edit={this.state.edit}\r\n                    rowData={this.state.rowData}\r\n                    hide={this.hideModal}\r\n                    createData={onCreateEmployee}\r\n                    updateData={onUpdateEmployee}\r\n                />\r\n                <Table\r\n                    columns={getColunms(this.handleUpdate, this.handleDelete)}\r\n                    dataSource={employeeList}\r\n                    loading={this.state.loading}\r\n                    className=\"table\"\r\n                    pagination={false}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n```\r\n\r\n#### React不用div\r\n\r\n```html\r\n<React.Fragment></React.Fragment>\r\n也可写成\r\n<></>\r\n```\r\n\r\n#### 不错的eslint规范\r\n\r\n> eslint-config-airbnb\r\n> eslint-config-airbnb-base",
        "score": 1.0
      },
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/38",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/38/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/38/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/38/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/38",
        "id": 520610251,
        "node_id": "MDU6SXNzdWU1MjA2MTAyNTE=",
        "number": 38,
        "title": "日常之js技巧集",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247499785,
            "node_id": "MDU6TGFiZWwxMjQ3NDk5Nzg1",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/JS%E4%B8%93%E9%A2%98",
            "name": "JS专题",
            "color": "e53d5c",
            "default": false,
            "description": "JS专题"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-10T14:42:27Z",
        "updated_at": "2020-02-23T09:28:00Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "#### 种Cookie\r\n\r\n```js\r\nvar C = {\r\n    /*cookie*/\r\n    getCookie: function(name) {\r\n        var cookie_start = document.cookie.indexOf(name + \"=\"),\r\n            cookie_end = document.cookie.indexOf(\";\", cookie_start);\r\n        return cookie_start == -1\r\n            ? \"\"\r\n            : unescape(\r\n                  document.cookie.substring(\r\n                      cookie_start + name.length + 1,\r\n                      cookie_end > cookie_start ? cookie_end : document.cookie.length\r\n                  )\r\n              );\r\n    },\r\n\r\n    setCookie: function(name, value, isSession) {\r\n        var expires = new Date();\r\n        expires.setTime(expires.getTime() + 2592000000);\r\n        //1month\r\n        var path_domain =\r\n            \"; path=/\" +\r\n            (document.domain.indexOf(\"vdian.com\") != -1\r\n                ? \"; domain=vdian.com\"\r\n                : document.domain.indexOf(\"koudai.com\") != -1\r\n                    ? \"; domain=koudai.com\"\r\n                    : document.domain.indexOf(\"weidian.com\") != -1 ? \"; domain=weidian.com\" : \"\");\r\n        if (typeof name === \"object\") {\r\n            for (var v in name) {\r\n                var cookie_content = escape(v) + \"=\" + escape(name[v]);\r\n                document.cookie = cookie_content + \"; expires=\" + expires.toGMTString() + path_domain;\r\n            }\r\n        } else {\r\n            var cookie_content = escape(name) + \"=\" + escape(value);\r\n            console.log(cookie_content + (isSession ? \"\" : \"; expires=\" + expires.toGMTString()) + path_domain);\r\n            document.cookie = cookie_content + (isSession ? \"\" : \"; expires=\" + expires.toGMTString()) + path_domain;\r\n        }\r\n    },\r\n    delCookie: function(name) {\r\n        var path_domain =\r\n            \"; path=/\" +\r\n            (document.domain.indexOf(\"vdian.com\") != -1\r\n                ? \"; domain=vdian.com\"\r\n                : document.domain.indexOf(\"koudai.com\") != -1\r\n                    ? \"; domain=koudai.com\"\r\n                    : document.domain.indexOf(\"weidian.com\") != -1 ? \"; domain=weidian.com\" : \"\");\r\n        document.cookie = escape(name) + \"=; expires=\" + new Date(0).toUTCString() + path_domain;\r\n    },\r\n    clearCookie: function() {\r\n        var _keys = document.cookie.match(/[^ =;]+(?=\\=)/g);\r\n        if (_keys) {\r\n            var l = _keys.length;\r\n            for (var i = l; i--; ) {\r\n                C.delCookie(_keys[i]);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nfunction setCookieStr(cookieStr) {\r\n    cookieStr.split(\";\").forEach(value => {\r\n        let item = value.split(\"=\");\r\n        C.setCookie(item[0].trim(), item[1].trim());\r\n    });\r\n}\r\n\r\nsetCookieStr('blabla')\r\n```\r\n\r\n#### 纯前端跨域下载方案\r\n\r\n```js\r\nconst download = (info) => async () => {\r\n    let getFile = await fetch(info);\r\n    getFile = await getFile.blob();\r\n    let a = document.createElement('a');\r\n    document.body.appendChild(a);\r\n    let url = window.URL.createObjectURL(getFile);\r\n    a.href = url;\r\n    a.download = name;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    document.body.removeChild(a);\r\n }\r\n 这是一个纯前端跨域下载方案。\r\n```\r\n#### koa实现代理跨域\r\n\r\n```js\r\nconst Koa = require('koa')\r\nconst httpProxy = require('http-proxy-middleware')\r\nconst app = new Koa()\r\n\r\napp.use(async(ctx, next) => {\r\n    if(ctx.url.startsWith('/api')) {\r\n        ctx.respond = false;\r\n        await httpProxy({\r\n            target: 'http://someapi.com',\r\n            changeOrigin: true,\r\n            secure: false,\r\n            pathRewrite:{\r\n                '^/api':\"\"\r\n            }\r\n        })(ctx.req, ctx.res, next);\r\n    }\r\n    await next();\r\n})\r\n```\r\n\r\n#### JSON 从buffer获取原型\r\n\r\n```js\r\nlet json = JSON.parse(jsonBuffer.toString())\r\n```\r\n\r\n#### 替换资源路径为相对协议头\r\n\r\n```js\r\nJSON.parse(JSON.stringify(data).replace(/(http:)|(https:)/g, ''))\r\n```\r\n\r\n#### 有关区域时间点判断逻辑的方法\r\n\r\n[时间戳概念](https://www.liaoxuefeng.com/wiki/1022910821149312/1023021626575072)\r\n\r\n\r\n[如何调整时区](https://blog.csdn.net/u012193330/article/details/79637660)\r\n\r\n这里注意GMT时间和UTC时间是不同的，UTC更加精确些\r\n\r\n```js\r\n// GMT算法\r\n\r\nlet offset_GMT = new Date().getTimezoneOffset();\r\nlet now = new Date().getTime();\r\n// targetDate是指当前目标地区的时间对应的时间戳\r\nlet targetDate = now + offset_GMT * 60 * 1000 + timezone_ind * 60 * 60 * 1000;\r\n```\r\n\r\n#### 拍照图像处理+base64URL编码转blob对象\r\n\r\n```ts\r\nimport * as EXIF from 'exif-js' ;\r\n\r\ntype imageUtilConfig = {\r\n  max_side: number;\r\n  min_side: number;\r\n}\r\n\r\ntype imageInfo = {\r\n  img;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst convertBase64UrlToBlob = (urlData: string) => {\r\n  let binaryString = atob(urlData.split(',')[1]);\r\n  let arrayBuffer = new ArrayBuffer(binaryString.length);\r\n  let intArray = new Uint8Array(arrayBuffer);\r\n  let mime = urlData.split(',')[0].match(/:(.*?);/)[1];\r\n  for (let i = 0, j = binaryString.length; i < j; i++) {\r\n      intArray[i] = binaryString.charCodeAt(i);\r\n  }\r\n  let data = [intArray];\r\n  let result = new Blob(data, { type: mime });\r\n  return result;\r\n}\r\n\r\n\r\nconst fixOrientationAndCompress = async (file, config?: imageUtilConfig, cb?) => {\r\n  if (!file) {\r\n    return;\r\n  }\r\n  let orientation = null;\r\n  let camera_info: number = await new Promise(resolve => {\r\n    EXIF.getData(file, function () {\r\n      orientation = EXIF.getTag(this, 'Orientation');\r\n      resolve(orientation);\r\n    })\r\n  });\r\n  orientation = camera_info || 0;\r\n  let img_info :imageInfo = await new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onloadend = function () {\r\n      if (reader.error) {\r\n          reject();\r\n          return;\r\n      }\r\n      let img: any = new Image();\r\n      img.onload = function () {\r\n        resolve({ img, width: img.width, height: img.height });\r\n      };\r\n\r\n      img.src = reader.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  });\r\n  let {img, width, height} = img_info;\r\n  const img_max_side = Math.max(width, height);\r\n  const img_min_side = Math.min(width, height);\r\n  const {max_side, min_side} = config ? config : {max_side: 1280, min_side: 720};\r\n  if (img_max_side > max_side || img_min_side > min_side) {\r\n    const scaleRatio = Math.max(img_min_side / min_side, img_max_side / max_side);\r\n    width = width / scaleRatio;\r\n    height = height / scaleRatio;\r\n  }\r\n  const canvas = document.createElement('canvas');\r\n  canvas.style.border = '1px solid red';\r\n  const ctx = canvas.getContext('2d');\r\n  switch (orientation) {\r\n      case 3: {\r\n          // 180\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n          ctx.rotate(Math.PI);\r\n          ctx.drawImage(img, -width, -height, width, height);\r\n          break;\r\n      }\r\n      case 6: {\r\n          // 顺时针转90\r\n          canvas.width = height;\r\n          canvas.height = width;\r\n          ctx.rotate(Math.PI / 2);\r\n          ctx.drawImage(img, 0, -height, width, height);\r\n          break;\r\n      }\r\n      case 8: {\r\n          // 逆时针转90\r\n          canvas.width = height;\r\n          canvas.height = width;\r\n          ctx.rotate(Math.PI * 3 / 2);\r\n          ctx.drawImage(img, -width, 0, width, height);\r\n          break;\r\n      }\r\n      default: {\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n          ctx.drawImage(img, 0, 0, width, height);\r\n          break;\r\n      }\r\n  }\r\n  const dataUrl = canvas.toDataURL(file.type || 'image/png');\r\n  return {dataUrl, file: convertBase64UrlToBlob(dataUrl)};\r\n}\r\n\r\nexport default fixOrientationAndCompress;\r\n\r\n```\r\n\r\n#### 补丁法解决rem布局在部分安卓机出现的适配问题\r\n\r\n```js\r\nvar html_font = parseFloat(document.documentElement.style.fontSize);\r\nvar user_webset_font = null;\r\nif (document.documentElement.currentStyle) {\r\nuser_webset_font=parseFloat(document.documentElement.currentStyle['fontSize']);\r\n} else {\r\n//- 获取当前元素最终使用的css属性值\r\nuser_webset_font=parseFloat(getComputedStyle(document.documentElement,false)['fontSize']);\r\n}\r\nif (html_font !== user_webset_font) {\r\ndocument.documentElement.style.cssText = 'font-size: ' + html_font * (html_font / user_webset_font) + 'px';\r\n}\r\n```\r\n\r\n#### Rest参数拓展运算符\r\n\r\n```js\r\n// 有一些比较惊艳的写法可以看下\r\nfunction testArr(...rest) {\r\n    let sum = 0;\r\n    console.log(rest);\r\n    for(let i of rest) {\r\n        sum += i;\r\n    }\r\n    return sum;\r\n}\r\nconsole.log(testArr(1, 2, 3 ,4));\r\n```\r\n\r\n#### 从对象中提取指定的key\r\n\r\n```js\r\nconst objectall = {\r\n  a: 1,\r\n  b: 2,\r\n  c: 3\r\n};\r\n\r\nconst getNewObject = chosenKeys =>\r\n  Object.keys(objectall)\r\n    .filter(val => chosenKeys.includes(val))\r\n    .reduce((res, key) => {\r\n      res[key] = objectall[key];\r\n      return res;\r\n    }, {});\r\nconsole.log(getNewObject(\"a\"));\r\nconsole.log(getNewObject([\"a\", \"b\"]));\r\n```\r\n\r\n#### 剪贴板复制\r\n\r\n```js\r\nlet link_input = document.createElement('input');\r\nlink_input.value = window.location.href;\r\nlink_input.readOnly = 'readOnly';\r\ndocument.body.appendChild(link_input);\r\nlet isIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/); \r\nisIOS && link_input.setSelectionRange(0, 9999) || link_input.select();\r\nif (document.execCommand('copy')) {\r\n    document.execCommand('copy');\r\n    console.log('复制成功');\r\n}\r\ndocument.body.removeChild(link_input);\r\n```\r\n\r\n\r\n",
        "score": 1.0
      },
      {
        "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/37",
        "repository_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io",
        "labels_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/37/labels{/name}",
        "comments_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/37/comments",
        "events_url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/issues/37/events",
        "html_url": "https://github.com/Jackson-p/Jackson-p.github.io/issues/37",
        "id": 449046413,
        "node_id": "MDU6SXNzdWU0NDkwNDY0MTM=",
        "number": 37,
        "title": "移动端web调试方法",
        "user": {
          "login": "Jackson-p",
          "id": 20417123,
          "node_id": "MDQ6VXNlcjIwNDE3MTIz",
          "avatar_url": "https://avatars0.githubusercontent.com/u/20417123?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jackson-p",
          "html_url": "https://github.com/Jackson-p",
          "followers_url": "https://api.github.com/users/Jackson-p/followers",
          "following_url": "https://api.github.com/users/Jackson-p/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jackson-p/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jackson-p/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jackson-p/subscriptions",
          "organizations_url": "https://api.github.com/users/Jackson-p/orgs",
          "repos_url": "https://api.github.com/users/Jackson-p/repos",
          "events_url": "https://api.github.com/users/Jackson-p/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jackson-p/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1247584816,
            "node_id": "MDU6TGFiZWwxMjQ3NTg0ODE2",
            "url": "https://api.github.com/repos/Jackson-p/Jackson-p.github.io/labels/%E5%B7%A5%E5%85%B7%E3%80%81%E5%BA%93%E4%B8%8E%E6%A1%86%E6%9E%B6",
            "name": "工具、库与框架",
            "color": "d67e13",
            "default": false,
            "description": "工具、库与框架"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-28T03:19:31Z",
        "updated_at": "2019-05-28T15:28:15Z",
        "closed_at": null,
        "author_association": "OWNER",
        "body": "# 移动端web调试方法\r\n\r\n在很多时候，通过chrome浏览器进行调试和时候无论是样式还是功能都会与真机有一定出入，所以移动端调试web页面比较重要，记录三种方法先。\r\n\r\n## 连线\r\n\r\n方法如名，直接将手机和电脑相连再通过chrome的dev调试。大牛总结很多了，这里贴个链接。\r\n[机连调试方法](https://segmentfault.com/a/1190000005964730)\r\n\r\n## 移动端访问ip\r\n\r\n先在电脑上启动本地应用，然后ifconfig（mac命令）查看ip，假如是在本地localhost:8000启的应用，直接在手机浏览器里输入ip:8000就可以了。缺点就是如果某些app需要端内调试，以ip开头的地址不一定会被识别。\r\n\r\n## charles代理\r\n\r\n这个个人觉得是最好用的办法了，先打开charles，手机连wifi开启手动代理模式，输入电脑ip和设定的某个端口。然后通过charles就可以抓住手机访问各种网页的各种请求了(比如如果没加密的话也可以抓cookie哦，并且可以把cookie种到浏览器里面，这样浏览器还能模拟移动端的登录状态2333），但是手机上不能输入localhost来直接访问，因为手机上的localhost是手机本身。。。。。解决方案如下～\r\n\r\n```shell\r\nsudo vim /etc/hosts\r\n```\r\n\r\n加入一行：\r\n127.0.0.1             想要的测试地址名\r\n\r\n生效后就可以了",
        "score": 1.0
      }
    ]
  }
}
